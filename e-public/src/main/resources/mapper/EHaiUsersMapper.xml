<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.ehais.epublic.mapper.EHaiUsersMapper">
  <resultMap id="BaseResultMap" type="org.ehais.epublic.model.EHaiUsers">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Sep 10 22:26:52 CST 2017.
    -->
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="realname" jdbcType="VARCHAR" property="realname" />
    <result column="question" jdbcType="VARCHAR" property="question" />
    <result column="answer" jdbcType="VARCHAR" property="answer" />
    <result column="sex" jdbcType="SMALLINT" property="sex" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="user_money" jdbcType="DECIMAL" property="userMoney" />
    <result column="frozen_money" jdbcType="DECIMAL" property="frozenMoney" />
    <result column="pay_points" jdbcType="INTEGER" property="payPoints" />
    <result column="rank_points" jdbcType="INTEGER" property="rankPoints" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="address_id" jdbcType="INTEGER" property="addressId" />
    <result column="reg_time" jdbcType="TIMESTAMP" property="regTime" />
    <result column="last_login" jdbcType="TIMESTAMP" property="lastLogin" />
    <result column="last_time" jdbcType="TIMESTAMP" property="lastTime" />
    <result column="last_ip" jdbcType="VARCHAR" property="lastIp" />
    <result column="visit_count" jdbcType="SMALLINT" property="visitCount" />
    <result column="user_rank" jdbcType="TINYINT" property="userRank" />
    <result column="is_special" jdbcType="TINYINT" property="isSpecial" />
    <result column="ec_salt" jdbcType="VARCHAR" property="ecSalt" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="flag" jdbcType="TINYINT" property="flag" />
    <result column="alias" jdbcType="VARCHAR" property="alias" />
    <result column="msn" jdbcType="VARCHAR" property="msn" />
    <result column="qq" jdbcType="VARCHAR" property="qq" />
    <result column="office_phone" jdbcType="VARCHAR" property="officePhone" />
    <result column="home_phone" jdbcType="VARCHAR" property="homePhone" />
    <result column="mobile_phone" jdbcType="VARCHAR" property="mobilePhone" />
    <result column="is_validated" jdbcType="TINYINT" property="isValidated" />
    <result column="credit_line" jdbcType="DECIMAL" property="creditLine" />
    <result column="passwd_question" jdbcType="VARCHAR" property="passwdQuestion" />
    <result column="passwd_answer" jdbcType="VARCHAR" property="passwdAnswer" />
    <result column="store_id" jdbcType="INTEGER" property="storeId" />
    <result column="country" jdbcType="INTEGER" property="country" />
    <result column="province" jdbcType="INTEGER" property="province" />
    <result column="city" jdbcType="INTEGER" property="city" />
    <result column="county" jdbcType="INTEGER" property="county" />
    <result column="district" jdbcType="INTEGER" property="district" />
    <result column="street" jdbcType="INTEGER" property="street" />
    <result column="user_type" jdbcType="SMALLINT" property="userType" />
    <result column="face_image" jdbcType="VARCHAR" property="faceImage" />
    <result column="openid" jdbcType="VARCHAR" property="openid" />
    <result column="subscribe" jdbcType="INTEGER" property="subscribe" />
    <result column="agency_id" jdbcType="INTEGER" property="agencyId" />
    <result column="partner_id" jdbcType="INTEGER" property="partnerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="org.ehais.epublic.model.EHaiUsers">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Sep 10 22:26:52 CST 2017.
    -->
    <result column="self_description" jdbcType="LONGVARCHAR" property="selfDescription" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Sep 10 22:26:52 CST 2017.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Sep 10 22:26:52 CST 2017.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Sep 10 22:26:52 CST 2017.
    -->
    user_id, email, user_name, password, nickname, realname, question, answer, sex, birthday, 
    user_money, frozen_money, pay_points, rank_points, address, address_id, reg_time, 
    last_login, last_time, last_ip, visit_count, user_rank, is_special, ec_salt, salt, 
    parent_id, flag, alias, msn, qq, office_phone, home_phone, mobile_phone, is_validated, 
    credit_line, passwd_question, passwd_answer, store_id, country, province, city, county, 
    district, street, user_type, face_image, openid, subscribe, agency_id, partner_id
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Sep 10 22:26:52 CST 2017.
    -->
    self_description
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="org.ehais.epublic.model.EHaiUsersExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Sep 10 22:26:52 CST 2017.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from hai_users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0 and limitEnd > 0">
       limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByExample" parameterType="org.ehais.epublic.model.EHaiUsersExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Sep 10 22:26:52 CST 2017.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hai_users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0 and limitEnd > 0">
       limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Sep 10 22:26:52 CST 2017.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from hai_users
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Sep 10 22:26:52 CST 2017.
    -->
    delete from hai_users
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.ehais.epublic.model.EHaiUsersExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Sep 10 22:26:52 CST 2017.
    -->
    delete from hai_users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.ehais.epublic.model.EHaiUsers">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Sep 10 22:26:52 CST 2017.
    -->
    <selectKey keyProperty="userId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into hai_users (email, user_name, password, 
      nickname, realname, question, 
      answer, sex, birthday, 
      user_money, frozen_money, pay_points, 
      rank_points, address, address_id, 
      reg_time, last_login, last_time, 
      last_ip, visit_count, user_rank, 
      is_special, ec_salt, salt, 
      parent_id, flag, alias, 
      msn, qq, office_phone, 
      home_phone, mobile_phone, is_validated, 
      credit_line, passwd_question, passwd_answer, 
      store_id, country, province, 
      city, county, district, 
      street, user_type, face_image, 
      openid, subscribe, agency_id, 
      partner_id, self_description)
    values (#{email,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{nickname,jdbcType=VARCHAR}, #{realname,jdbcType=VARCHAR}, #{question,jdbcType=VARCHAR}, 
      #{answer,jdbcType=VARCHAR}, #{sex,jdbcType=SMALLINT}, #{birthday,jdbcType=DATE}, 
      #{userMoney,jdbcType=DECIMAL}, #{frozenMoney,jdbcType=DECIMAL}, #{payPoints,jdbcType=INTEGER}, 
      #{rankPoints,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, #{addressId,jdbcType=INTEGER}, 
      #{regTime,jdbcType=TIMESTAMP}, #{lastLogin,jdbcType=TIMESTAMP}, #{lastTime,jdbcType=TIMESTAMP}, 
      #{lastIp,jdbcType=VARCHAR}, #{visitCount,jdbcType=SMALLINT}, #{userRank,jdbcType=TINYINT}, 
      #{isSpecial,jdbcType=TINYINT}, #{ecSalt,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, 
      #{parentId,jdbcType=BIGINT}, #{flag,jdbcType=TINYINT}, #{alias,jdbcType=VARCHAR}, 
      #{msn,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, #{officePhone,jdbcType=VARCHAR}, 
      #{homePhone,jdbcType=VARCHAR}, #{mobilePhone,jdbcType=VARCHAR}, #{isValidated,jdbcType=TINYINT}, 
      #{creditLine,jdbcType=DECIMAL}, #{passwdQuestion,jdbcType=VARCHAR}, #{passwdAnswer,jdbcType=VARCHAR}, 
      #{storeId,jdbcType=INTEGER}, #{country,jdbcType=INTEGER}, #{province,jdbcType=INTEGER}, 
      #{city,jdbcType=INTEGER}, #{county,jdbcType=INTEGER}, #{district,jdbcType=INTEGER}, 
      #{street,jdbcType=INTEGER}, #{userType,jdbcType=SMALLINT}, #{faceImage,jdbcType=VARCHAR}, 
      #{openid,jdbcType=VARCHAR}, #{subscribe,jdbcType=INTEGER}, #{agencyId,jdbcType=INTEGER}, 
      #{partnerId,jdbcType=INTEGER}, #{selfDescription,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.ehais.epublic.model.EHaiUsers">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Sep 10 22:26:52 CST 2017.
    -->
    <selectKey keyProperty="userId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into hai_users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="email != null">
        email,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="realname != null">
        realname,
      </if>
      <if test="question != null">
        question,
      </if>
      <if test="answer != null">
        answer,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="userMoney != null">
        user_money,
      </if>
      <if test="frozenMoney != null">
        frozen_money,
      </if>
      <if test="payPoints != null">
        pay_points,
      </if>
      <if test="rankPoints != null">
        rank_points,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="addressId != null">
        address_id,
      </if>
      <if test="regTime != null">
        reg_time,
      </if>
      <if test="lastLogin != null">
        last_login,
      </if>
      <if test="lastTime != null">
        last_time,
      </if>
      <if test="lastIp != null">
        last_ip,
      </if>
      <if test="visitCount != null">
        visit_count,
      </if>
      <if test="userRank != null">
        user_rank,
      </if>
      <if test="isSpecial != null">
        is_special,
      </if>
      <if test="ecSalt != null">
        ec_salt,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="flag != null">
        flag,
      </if>
      <if test="alias != null">
        alias,
      </if>
      <if test="msn != null">
        msn,
      </if>
      <if test="qq != null">
        qq,
      </if>
      <if test="officePhone != null">
        office_phone,
      </if>
      <if test="homePhone != null">
        home_phone,
      </if>
      <if test="mobilePhone != null">
        mobile_phone,
      </if>
      <if test="isValidated != null">
        is_validated,
      </if>
      <if test="creditLine != null">
        credit_line,
      </if>
      <if test="passwdQuestion != null">
        passwd_question,
      </if>
      <if test="passwdAnswer != null">
        passwd_answer,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="country != null">
        country,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="county != null">
        county,
      </if>
      <if test="district != null">
        district,
      </if>
      <if test="street != null">
        street,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="faceImage != null">
        face_image,
      </if>
      <if test="openid != null">
        openid,
      </if>
      <if test="subscribe != null">
        subscribe,
      </if>
      <if test="agencyId != null">
        agency_id,
      </if>
      <if test="partnerId != null">
        partner_id,
      </if>
      <if test="selfDescription != null">
        self_description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="question != null">
        #{question,jdbcType=VARCHAR},
      </if>
      <if test="answer != null">
        #{answer,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=SMALLINT},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="userMoney != null">
        #{userMoney,jdbcType=DECIMAL},
      </if>
      <if test="frozenMoney != null">
        #{frozenMoney,jdbcType=DECIMAL},
      </if>
      <if test="payPoints != null">
        #{payPoints,jdbcType=INTEGER},
      </if>
      <if test="rankPoints != null">
        #{rankPoints,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="addressId != null">
        #{addressId,jdbcType=INTEGER},
      </if>
      <if test="regTime != null">
        #{regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLogin != null">
        #{lastLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="lastTime != null">
        #{lastTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastIp != null">
        #{lastIp,jdbcType=VARCHAR},
      </if>
      <if test="visitCount != null">
        #{visitCount,jdbcType=SMALLINT},
      </if>
      <if test="userRank != null">
        #{userRank,jdbcType=TINYINT},
      </if>
      <if test="isSpecial != null">
        #{isSpecial,jdbcType=TINYINT},
      </if>
      <if test="ecSalt != null">
        #{ecSalt,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=TINYINT},
      </if>
      <if test="alias != null">
        #{alias,jdbcType=VARCHAR},
      </if>
      <if test="msn != null">
        #{msn,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="officePhone != null">
        #{officePhone,jdbcType=VARCHAR},
      </if>
      <if test="homePhone != null">
        #{homePhone,jdbcType=VARCHAR},
      </if>
      <if test="mobilePhone != null">
        #{mobilePhone,jdbcType=VARCHAR},
      </if>
      <if test="isValidated != null">
        #{isValidated,jdbcType=TINYINT},
      </if>
      <if test="creditLine != null">
        #{creditLine,jdbcType=DECIMAL},
      </if>
      <if test="passwdQuestion != null">
        #{passwdQuestion,jdbcType=VARCHAR},
      </if>
      <if test="passwdAnswer != null">
        #{passwdAnswer,jdbcType=VARCHAR},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="country != null">
        #{country,jdbcType=INTEGER},
      </if>
      <if test="province != null">
        #{province,jdbcType=INTEGER},
      </if>
      <if test="city != null">
        #{city,jdbcType=INTEGER},
      </if>
      <if test="county != null">
        #{county,jdbcType=INTEGER},
      </if>
      <if test="district != null">
        #{district,jdbcType=INTEGER},
      </if>
      <if test="street != null">
        #{street,jdbcType=INTEGER},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=SMALLINT},
      </if>
      <if test="faceImage != null">
        #{faceImage,jdbcType=VARCHAR},
      </if>
      <if test="openid != null">
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="subscribe != null">
        #{subscribe,jdbcType=INTEGER},
      </if>
      <if test="agencyId != null">
        #{agencyId,jdbcType=INTEGER},
      </if>
      <if test="partnerId != null">
        #{partnerId,jdbcType=INTEGER},
      </if>
      <if test="selfDescription != null">
        #{selfDescription,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.ehais.epublic.model.EHaiUsersExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Sep 10 22:26:52 CST 2017.
    -->
    select count(*) from hai_users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Sep 10 22:26:52 CST 2017.
    -->
    update hai_users
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.realname != null">
        realname = #{record.realname,jdbcType=VARCHAR},
      </if>
      <if test="record.question != null">
        question = #{record.question,jdbcType=VARCHAR},
      </if>
      <if test="record.answer != null">
        answer = #{record.answer,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=SMALLINT},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.userMoney != null">
        user_money = #{record.userMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.frozenMoney != null">
        frozen_money = #{record.frozenMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.payPoints != null">
        pay_points = #{record.payPoints,jdbcType=INTEGER},
      </if>
      <if test="record.rankPoints != null">
        rank_points = #{record.rankPoints,jdbcType=INTEGER},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.addressId != null">
        address_id = #{record.addressId,jdbcType=INTEGER},
      </if>
      <if test="record.regTime != null">
        reg_time = #{record.regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastLogin != null">
        last_login = #{record.lastLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastTime != null">
        last_time = #{record.lastTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastIp != null">
        last_ip = #{record.lastIp,jdbcType=VARCHAR},
      </if>
      <if test="record.visitCount != null">
        visit_count = #{record.visitCount,jdbcType=SMALLINT},
      </if>
      <if test="record.userRank != null">
        user_rank = #{record.userRank,jdbcType=TINYINT},
      </if>
      <if test="record.isSpecial != null">
        is_special = #{record.isSpecial,jdbcType=TINYINT},
      </if>
      <if test="record.ecSalt != null">
        ec_salt = #{record.ecSalt,jdbcType=VARCHAR},
      </if>
      <if test="record.salt != null">
        salt = #{record.salt,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=BIGINT},
      </if>
      <if test="record.flag != null">
        flag = #{record.flag,jdbcType=TINYINT},
      </if>
      <if test="record.alias != null">
        alias = #{record.alias,jdbcType=VARCHAR},
      </if>
      <if test="record.msn != null">
        msn = #{record.msn,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null">
        qq = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.officePhone != null">
        office_phone = #{record.officePhone,jdbcType=VARCHAR},
      </if>
      <if test="record.homePhone != null">
        home_phone = #{record.homePhone,jdbcType=VARCHAR},
      </if>
      <if test="record.mobilePhone != null">
        mobile_phone = #{record.mobilePhone,jdbcType=VARCHAR},
      </if>
      <if test="record.isValidated != null">
        is_validated = #{record.isValidated,jdbcType=TINYINT},
      </if>
      <if test="record.creditLine != null">
        credit_line = #{record.creditLine,jdbcType=DECIMAL},
      </if>
      <if test="record.passwdQuestion != null">
        passwd_question = #{record.passwdQuestion,jdbcType=VARCHAR},
      </if>
      <if test="record.passwdAnswer != null">
        passwd_answer = #{record.passwdAnswer,jdbcType=VARCHAR},
      </if>
      <if test="record.storeId != null">
        store_id = #{record.storeId,jdbcType=INTEGER},
      </if>
      <if test="record.country != null">
        country = #{record.country,jdbcType=INTEGER},
      </if>
      <if test="record.province != null">
        province = #{record.province,jdbcType=INTEGER},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=INTEGER},
      </if>
      <if test="record.county != null">
        county = #{record.county,jdbcType=INTEGER},
      </if>
      <if test="record.district != null">
        district = #{record.district,jdbcType=INTEGER},
      </if>
      <if test="record.street != null">
        street = #{record.street,jdbcType=INTEGER},
      </if>
      <if test="record.userType != null">
        user_type = #{record.userType,jdbcType=SMALLINT},
      </if>
      <if test="record.faceImage != null">
        face_image = #{record.faceImage,jdbcType=VARCHAR},
      </if>
      <if test="record.openid != null">
        openid = #{record.openid,jdbcType=VARCHAR},
      </if>
      <if test="record.subscribe != null">
        subscribe = #{record.subscribe,jdbcType=INTEGER},
      </if>
      <if test="record.agencyId != null">
        agency_id = #{record.agencyId,jdbcType=INTEGER},
      </if>
      <if test="record.partnerId != null">
        partner_id = #{record.partnerId,jdbcType=INTEGER},
      </if>
      <if test="record.selfDescription != null">
        self_description = #{record.selfDescription,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Sep 10 22:26:52 CST 2017.
    -->
    update hai_users
    set user_id = #{record.userId,jdbcType=BIGINT},
      email = #{record.email,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      realname = #{record.realname,jdbcType=VARCHAR},
      question = #{record.question,jdbcType=VARCHAR},
      answer = #{record.answer,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=SMALLINT},
      birthday = #{record.birthday,jdbcType=DATE},
      user_money = #{record.userMoney,jdbcType=DECIMAL},
      frozen_money = #{record.frozenMoney,jdbcType=DECIMAL},
      pay_points = #{record.payPoints,jdbcType=INTEGER},
      rank_points = #{record.rankPoints,jdbcType=INTEGER},
      address = #{record.address,jdbcType=VARCHAR},
      address_id = #{record.addressId,jdbcType=INTEGER},
      reg_time = #{record.regTime,jdbcType=TIMESTAMP},
      last_login = #{record.lastLogin,jdbcType=TIMESTAMP},
      last_time = #{record.lastTime,jdbcType=TIMESTAMP},
      last_ip = #{record.lastIp,jdbcType=VARCHAR},
      visit_count = #{record.visitCount,jdbcType=SMALLINT},
      user_rank = #{record.userRank,jdbcType=TINYINT},
      is_special = #{record.isSpecial,jdbcType=TINYINT},
      ec_salt = #{record.ecSalt,jdbcType=VARCHAR},
      salt = #{record.salt,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=BIGINT},
      flag = #{record.flag,jdbcType=TINYINT},
      alias = #{record.alias,jdbcType=VARCHAR},
      msn = #{record.msn,jdbcType=VARCHAR},
      qq = #{record.qq,jdbcType=VARCHAR},
      office_phone = #{record.officePhone,jdbcType=VARCHAR},
      home_phone = #{record.homePhone,jdbcType=VARCHAR},
      mobile_phone = #{record.mobilePhone,jdbcType=VARCHAR},
      is_validated = #{record.isValidated,jdbcType=TINYINT},
      credit_line = #{record.creditLine,jdbcType=DECIMAL},
      passwd_question = #{record.passwdQuestion,jdbcType=VARCHAR},
      passwd_answer = #{record.passwdAnswer,jdbcType=VARCHAR},
      store_id = #{record.storeId,jdbcType=INTEGER},
      country = #{record.country,jdbcType=INTEGER},
      province = #{record.province,jdbcType=INTEGER},
      city = #{record.city,jdbcType=INTEGER},
      county = #{record.county,jdbcType=INTEGER},
      district = #{record.district,jdbcType=INTEGER},
      street = #{record.street,jdbcType=INTEGER},
      user_type = #{record.userType,jdbcType=SMALLINT},
      face_image = #{record.faceImage,jdbcType=VARCHAR},
      openid = #{record.openid,jdbcType=VARCHAR},
      subscribe = #{record.subscribe,jdbcType=INTEGER},
      agency_id = #{record.agencyId,jdbcType=INTEGER},
      partner_id = #{record.partnerId,jdbcType=INTEGER},
      self_description = #{record.selfDescription,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Sep 10 22:26:52 CST 2017.
    -->
    update hai_users
    set user_id = #{record.userId,jdbcType=BIGINT},
      email = #{record.email,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      realname = #{record.realname,jdbcType=VARCHAR},
      question = #{record.question,jdbcType=VARCHAR},
      answer = #{record.answer,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=SMALLINT},
      birthday = #{record.birthday,jdbcType=DATE},
      user_money = #{record.userMoney,jdbcType=DECIMAL},
      frozen_money = #{record.frozenMoney,jdbcType=DECIMAL},
      pay_points = #{record.payPoints,jdbcType=INTEGER},
      rank_points = #{record.rankPoints,jdbcType=INTEGER},
      address = #{record.address,jdbcType=VARCHAR},
      address_id = #{record.addressId,jdbcType=INTEGER},
      reg_time = #{record.regTime,jdbcType=TIMESTAMP},
      last_login = #{record.lastLogin,jdbcType=TIMESTAMP},
      last_time = #{record.lastTime,jdbcType=TIMESTAMP},
      last_ip = #{record.lastIp,jdbcType=VARCHAR},
      visit_count = #{record.visitCount,jdbcType=SMALLINT},
      user_rank = #{record.userRank,jdbcType=TINYINT},
      is_special = #{record.isSpecial,jdbcType=TINYINT},
      ec_salt = #{record.ecSalt,jdbcType=VARCHAR},
      salt = #{record.salt,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=BIGINT},
      flag = #{record.flag,jdbcType=TINYINT},
      alias = #{record.alias,jdbcType=VARCHAR},
      msn = #{record.msn,jdbcType=VARCHAR},
      qq = #{record.qq,jdbcType=VARCHAR},
      office_phone = #{record.officePhone,jdbcType=VARCHAR},
      home_phone = #{record.homePhone,jdbcType=VARCHAR},
      mobile_phone = #{record.mobilePhone,jdbcType=VARCHAR},
      is_validated = #{record.isValidated,jdbcType=TINYINT},
      credit_line = #{record.creditLine,jdbcType=DECIMAL},
      passwd_question = #{record.passwdQuestion,jdbcType=VARCHAR},
      passwd_answer = #{record.passwdAnswer,jdbcType=VARCHAR},
      store_id = #{record.storeId,jdbcType=INTEGER},
      country = #{record.country,jdbcType=INTEGER},
      province = #{record.province,jdbcType=INTEGER},
      city = #{record.city,jdbcType=INTEGER},
      county = #{record.county,jdbcType=INTEGER},
      district = #{record.district,jdbcType=INTEGER},
      street = #{record.street,jdbcType=INTEGER},
      user_type = #{record.userType,jdbcType=SMALLINT},
      face_image = #{record.faceImage,jdbcType=VARCHAR},
      openid = #{record.openid,jdbcType=VARCHAR},
      subscribe = #{record.subscribe,jdbcType=INTEGER},
      agency_id = #{record.agencyId,jdbcType=INTEGER},
      partner_id = #{record.partnerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.ehais.epublic.model.EHaiUsers">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Sep 10 22:26:52 CST 2017.
    -->
    update hai_users
    <set>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="question != null">
        question = #{question,jdbcType=VARCHAR},
      </if>
      <if test="answer != null">
        answer = #{answer,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=SMALLINT},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="userMoney != null">
        user_money = #{userMoney,jdbcType=DECIMAL},
      </if>
      <if test="frozenMoney != null">
        frozen_money = #{frozenMoney,jdbcType=DECIMAL},
      </if>
      <if test="payPoints != null">
        pay_points = #{payPoints,jdbcType=INTEGER},
      </if>
      <if test="rankPoints != null">
        rank_points = #{rankPoints,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="addressId != null">
        address_id = #{addressId,jdbcType=INTEGER},
      </if>
      <if test="regTime != null">
        reg_time = #{regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLogin != null">
        last_login = #{lastLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="lastTime != null">
        last_time = #{lastTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastIp != null">
        last_ip = #{lastIp,jdbcType=VARCHAR},
      </if>
      <if test="visitCount != null">
        visit_count = #{visitCount,jdbcType=SMALLINT},
      </if>
      <if test="userRank != null">
        user_rank = #{userRank,jdbcType=TINYINT},
      </if>
      <if test="isSpecial != null">
        is_special = #{isSpecial,jdbcType=TINYINT},
      </if>
      <if test="ecSalt != null">
        ec_salt = #{ecSalt,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=TINYINT},
      </if>
      <if test="alias != null">
        alias = #{alias,jdbcType=VARCHAR},
      </if>
      <if test="msn != null">
        msn = #{msn,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="officePhone != null">
        office_phone = #{officePhone,jdbcType=VARCHAR},
      </if>
      <if test="homePhone != null">
        home_phone = #{homePhone,jdbcType=VARCHAR},
      </if>
      <if test="mobilePhone != null">
        mobile_phone = #{mobilePhone,jdbcType=VARCHAR},
      </if>
      <if test="isValidated != null">
        is_validated = #{isValidated,jdbcType=TINYINT},
      </if>
      <if test="creditLine != null">
        credit_line = #{creditLine,jdbcType=DECIMAL},
      </if>
      <if test="passwdQuestion != null">
        passwd_question = #{passwdQuestion,jdbcType=VARCHAR},
      </if>
      <if test="passwdAnswer != null">
        passwd_answer = #{passwdAnswer,jdbcType=VARCHAR},
      </if>
      <if test="storeId != null">
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="country != null">
        country = #{country,jdbcType=INTEGER},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=INTEGER},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=INTEGER},
      </if>
      <if test="county != null">
        county = #{county,jdbcType=INTEGER},
      </if>
      <if test="district != null">
        district = #{district,jdbcType=INTEGER},
      </if>
      <if test="street != null">
        street = #{street,jdbcType=INTEGER},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=SMALLINT},
      </if>
      <if test="faceImage != null">
        face_image = #{faceImage,jdbcType=VARCHAR},
      </if>
      <if test="openid != null">
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="subscribe != null">
        subscribe = #{subscribe,jdbcType=INTEGER},
      </if>
      <if test="agencyId != null">
        agency_id = #{agencyId,jdbcType=INTEGER},
      </if>
      <if test="partnerId != null">
        partner_id = #{partnerId,jdbcType=INTEGER},
      </if>
      <if test="selfDescription != null">
        self_description = #{selfDescription,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="org.ehais.epublic.model.EHaiUsers">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Sep 10 22:26:52 CST 2017.
    -->
    update hai_users
    set email = #{email,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      realname = #{realname,jdbcType=VARCHAR},
      question = #{question,jdbcType=VARCHAR},
      answer = #{answer,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=SMALLINT},
      birthday = #{birthday,jdbcType=DATE},
      user_money = #{userMoney,jdbcType=DECIMAL},
      frozen_money = #{frozenMoney,jdbcType=DECIMAL},
      pay_points = #{payPoints,jdbcType=INTEGER},
      rank_points = #{rankPoints,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      address_id = #{addressId,jdbcType=INTEGER},
      reg_time = #{regTime,jdbcType=TIMESTAMP},
      last_login = #{lastLogin,jdbcType=TIMESTAMP},
      last_time = #{lastTime,jdbcType=TIMESTAMP},
      last_ip = #{lastIp,jdbcType=VARCHAR},
      visit_count = #{visitCount,jdbcType=SMALLINT},
      user_rank = #{userRank,jdbcType=TINYINT},
      is_special = #{isSpecial,jdbcType=TINYINT},
      ec_salt = #{ecSalt,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=BIGINT},
      flag = #{flag,jdbcType=TINYINT},
      alias = #{alias,jdbcType=VARCHAR},
      msn = #{msn,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      office_phone = #{officePhone,jdbcType=VARCHAR},
      home_phone = #{homePhone,jdbcType=VARCHAR},
      mobile_phone = #{mobilePhone,jdbcType=VARCHAR},
      is_validated = #{isValidated,jdbcType=TINYINT},
      credit_line = #{creditLine,jdbcType=DECIMAL},
      passwd_question = #{passwdQuestion,jdbcType=VARCHAR},
      passwd_answer = #{passwdAnswer,jdbcType=VARCHAR},
      store_id = #{storeId,jdbcType=INTEGER},
      country = #{country,jdbcType=INTEGER},
      province = #{province,jdbcType=INTEGER},
      city = #{city,jdbcType=INTEGER},
      county = #{county,jdbcType=INTEGER},
      district = #{district,jdbcType=INTEGER},
      street = #{street,jdbcType=INTEGER},
      user_type = #{userType,jdbcType=SMALLINT},
      face_image = #{faceImage,jdbcType=VARCHAR},
      openid = #{openid,jdbcType=VARCHAR},
      subscribe = #{subscribe,jdbcType=INTEGER},
      agency_id = #{agencyId,jdbcType=INTEGER},
      partner_id = #{partnerId,jdbcType=INTEGER},
      self_description = #{selfDescription,jdbcType=LONGVARCHAR}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.ehais.epublic.model.EHaiUsers">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Sep 10 22:26:52 CST 2017.
    -->
    update hai_users
    set email = #{email,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      realname = #{realname,jdbcType=VARCHAR},
      question = #{question,jdbcType=VARCHAR},
      answer = #{answer,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=SMALLINT},
      birthday = #{birthday,jdbcType=DATE},
      user_money = #{userMoney,jdbcType=DECIMAL},
      frozen_money = #{frozenMoney,jdbcType=DECIMAL},
      pay_points = #{payPoints,jdbcType=INTEGER},
      rank_points = #{rankPoints,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      address_id = #{addressId,jdbcType=INTEGER},
      reg_time = #{regTime,jdbcType=TIMESTAMP},
      last_login = #{lastLogin,jdbcType=TIMESTAMP},
      last_time = #{lastTime,jdbcType=TIMESTAMP},
      last_ip = #{lastIp,jdbcType=VARCHAR},
      visit_count = #{visitCount,jdbcType=SMALLINT},
      user_rank = #{userRank,jdbcType=TINYINT},
      is_special = #{isSpecial,jdbcType=TINYINT},
      ec_salt = #{ecSalt,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=BIGINT},
      flag = #{flag,jdbcType=TINYINT},
      alias = #{alias,jdbcType=VARCHAR},
      msn = #{msn,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      office_phone = #{officePhone,jdbcType=VARCHAR},
      home_phone = #{homePhone,jdbcType=VARCHAR},
      mobile_phone = #{mobilePhone,jdbcType=VARCHAR},
      is_validated = #{isValidated,jdbcType=TINYINT},
      credit_line = #{creditLine,jdbcType=DECIMAL},
      passwd_question = #{passwdQuestion,jdbcType=VARCHAR},
      passwd_answer = #{passwdAnswer,jdbcType=VARCHAR},
      store_id = #{storeId,jdbcType=INTEGER},
      country = #{country,jdbcType=INTEGER},
      province = #{province,jdbcType=INTEGER},
      city = #{city,jdbcType=INTEGER},
      county = #{county,jdbcType=INTEGER},
      district = #{district,jdbcType=INTEGER},
      street = #{street,jdbcType=INTEGER},
      user_type = #{userType,jdbcType=SMALLINT},
      face_image = #{faceImage,jdbcType=VARCHAR},
      openid = #{openid,jdbcType=VARCHAR},
      subscribe = #{subscribe,jdbcType=INTEGER},
      agency_id = #{agencyId,jdbcType=INTEGER},
      partner_id = #{partnerId,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  
  <!-- //////////////////////////////////////////////////////////// -->

  <select id="hai_users_list" resultMap="BaseResultMap" parameterType="map" >
    select  
    <include refid="Base_Column_List" />
    from hai_users   
	where store_id = #{store_id} 
 
    <if test="orderByClause != null" >
      <![CDATA[ order by ${orderByClause}  ]]>
    </if>
    <if test="start != null and len != null and start >= 0 and len > 0" >
      <![CDATA[ limit #{start,jdbcType=INTEGER},#{len,jdbcType=INTEGER}  ]]>
    </if>
  </select>
  <select id="hai_users_list_by_example" resultMap="BaseResultMap" parameterType="org.ehais.epublic.model.EHaiUsersExample" >
    select  
    <include refid="Base_Column_List" />
    from hai_users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      <![CDATA[ order by ${orderByClause}  ]]>
    </if>
    <if test="start != null and len != null and start >= 0 and len > 0" >
      <![CDATA[ limit #{start,jdbcType=INTEGER},#{len,jdbcType=INTEGER}  ]]>
    </if>
  </select>
  <select id="get_hai_users_info" resultMap="ResultMapWithBLOBs" parameterType="map" >
    select  
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from hai_users
     where user_id = #{user_id} 
     and store_id = #{store_id} 
     limit 0,1 
  </select>
  
  <select id="login" resultMap="BaseResultMap" parameterType="map" >
    select  
    <include refid="Base_Column_List" />
    from hai_users
     where user_name = #{user_name} 
     and password = #{password} 
     limit 0,1 
  </select>
  
  <select id="login_store" resultMap="BaseResultMap" parameterType="map" >
    select  
    <include refid="Base_Column_List" />
    from hai_users
     where user_name = #{user_name} 
     and password = #{password} 
     and store_id = #{store_id} 
     limit 0,1 
  </select>
   
  <select id="checkUser" resultType="java.lang.Integer" > 
  	select count(*) from hai_users
    where user_name = #{userName,jdbcType=VARCHAR} or email = #{email,jdbcType=VARCHAR}
  </select>
  
  <update id="modifyPassword" > 
  	update hai_users set password = #{password,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER} 
  </update>
  
  
  <select id="selectUsersLike" resultMap="BaseResultMap" parameterType="map" >
    select  
    <include refid="Base_Column_List" />
    from hai_users
     where store_id = #{store_id}
     <if test="keyword != null" >
     	and (user_name like CONCAT('%',#{keyword},'%') 
     	or email like CONCAT('%',#{keyword},'%')
     	or nickname like CONCAT('%',#{keyword},'%')
     	or realname like CONCAT('%',#{keyword},'%')
     	or mobile_phone like CONCAT('%',#{keyword},'%')
     	or home_phone like CONCAT('%',#{keyword},'%')
     	or office_phone like CONCAT('%',#{keyword},'%')
     	)
     </if>
     <if test="question != null" >
     	and question = #{question}
     </if>
     <if test="orderByClause != null" >
      <![CDATA[ order by ${orderByClause}  ]]>
    </if>
    <if test="start != null and len != null and start >= 0 and len > 0" >
      <![CDATA[ limit #{start,jdbcType=INTEGER},#{len,jdbcType=INTEGER}  ]]>
    </if>
  </select>
  
  
  <select id="selectUsersLikeCount" resultType="java.lang.Integer" parameterType="map" >
    select  
    count(*)
    from hai_users
     where store_id = #{store_id}
     <if test="keyword != null" >
     	and (user_name like CONCAT('%',#{keyword},'%') 
     	or email like CONCAT('%',#{keyword},'%')
     	or nickname like CONCAT('%',#{keyword},'%')
     	or realname like CONCAT('%',#{keyword},'%')
     	or mobile_phone like CONCAT('%',#{keyword},'%')
     	or home_phone like CONCAT('%',#{keyword},'%')
     	or office_phone like CONCAT('%',#{keyword},'%')
     	)
     </if>
     <if test="question != null" >
     	and question = #{question}
     </if>
  </select>
  
  
</mapper>