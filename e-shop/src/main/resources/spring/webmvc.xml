<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<context:component-scan base-package="org.ehais.shop.controller,org.ehais.epublic.controller,org.ehais.controller.epublic"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<mvc:annotation-driven validator="validator">
		<!-- 解决@ResponseBody中文乱码 -->
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name = "supportedMediaTypes">
	                      <list>
	                          <value>text/html;charset=UTF-8</value>
	                     </list>   
	                </property>  
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	<!-- 以下 validator  ConversionService 在使用 mvc:annotation-driven 会 自动注册-->  
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">  
	    <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>  
	    <!-- 如果不加默认到 使用classpath下的 ValidationMessages.properties -->  
	    <property name="validationMessageSource" ref="messageSource"/>  
	</bean>
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames" value="i18n/messages" />
	</bean>


	<mvc:resources location="/js/" mapping="/js/**" cache-period="86400" />
	<mvc:resources location="/images/" mapping="/images/**" cache-period="86400" />
	<mvc:resources location="/css/" mapping="/css/**" cache-period="86400" />
	<mvc:resources location="/uploads/" mapping="/uploads/**" cache-period="86400" />
	
	<mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/"/>
 	<mvc:resources mapping="/ehais/**" location="classpath:/META-INF/resources/ehais/"/>
 

	<mvc:default-servlet-handler />

	<bean id="permission" class="org.ehais.definedFreemarker.PermissionFreemarkerDirective" /> 

	<!-- freemarker的配置 -->
	<bean id="freemarkerConfigurer"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPaths"  >
			<list>
				<value>/WEB-INF/view/</value>
				<value>classpath:/META-INF/resources/ehais/view/</value>
			</list>
		</property>
		<property name="defaultEncoding" value="UTF-8" />
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">10</prop>
				<prop key="locale">zh_CN</prop>
				<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
				<prop key="date_format">yyyy-MM-dd</prop>
				<prop key="number_format">#.##</prop>
			</props>
		</property>
		<property name="freemarkerVariables">  
	        <map> 
	            <entry key="permission" value-ref="permission" />  
	        </map>  
	    </property> 
	</bean>
	<!-- FreeMarker视图解析 如返回userinfo。。在这里配置后缀名ftl和视图解析器。。 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />
		<property name="suffix" value=".html" />
		<property name="contentType" value="text/html;charset=UTF8" />
		<property name="exposeRequestAttributes" value="true" />
		<property name="exposeSessionAttributes" value="true" />
		<property name="exposeSpringMacroHelpers" value="true" />
	</bean>



	<!-- 登录拦截器 -->
	 
	<mvc:interceptors>
	
		<mvc:interceptor>
			<mvc:mapping path="/member/**"/>			
			<ref bean="loginInterceptor"/>
		</mvc:interceptor>
		
		<mvc:interceptor>
			<mvc:mapping path="/admin/**"/>
			<ref bean="loginAdminInterceptor"/>
		</mvc:interceptor>
		
		<mvc:interceptor>
			<mvc:mapping path="/api/**"/>
			<ref bean="apiInterceptor"/>
		</mvc:interceptor>
		
		<mvc:interceptor>
			<mvc:mapping path="/m/**"/>
			<ref bean="h5Interceptor"/>
		</mvc:interceptor>
		
		<mvc:interceptor>
			<mvc:mapping path="/dining/**"/>
			<ref bean="diningInterceptor"/>
		</mvc:interceptor>
		
		<mvc:interceptor>
			<mvc:mapping path="/ehais/manage/**"/>
			<ref bean="ehaisManageInterceptor"/>
		</mvc:interceptor>
		
		<mvc:interceptor>
			<mvc:mapping path="/ehais/agency/**"/>
			<ref bean="ehaisAgencyInterceptor"/>
		</mvc:interceptor>
		
	</mvc:interceptors>
	<bean id="loginInterceptor" class="org.ehais.interceptor.LoginInterceptor">
		<property name="loginUrl" value="/login"/>
		<property name="ignoreUrls">
			<list>
				<value>/login</value>
				<value>/memberLogin</value>
				<value>/logout</value>
				<value>/apix/*</value>
			</list>
		</property>
	</bean>
	
	<bean id="loginAdminInterceptor" class="org.ehais.interceptor.AdminInterceptor">
		<property name="loginUrl" value="/adminlogin"/>
		<property name="notpermissionUrl" value="/notpermission"/>
		<property name="ignoreUrls">
			<list>
				<value>/adminlogin</value>
				<value>/adminLoginSubmitAjax</value>
				<value>/adminlogout</value>
				<value>/admin/index</value>
				<value>/admin/main</value>
			</list>
		</property>
	</bean>
	
	<bean id="apiInterceptor" class="org.ehais.interceptor.EApiInterceptor"></bean>
	
	<bean id="h5Interceptor" class="org.ehais.interceptor.H5Interceptor">
		<property name="loginUrl" value="/m/login"/>
		<property name="ignoreUrls">
			<list>
				<value>/m/index</value>
				<value>/m/g</value>
				<value>/m/register</value>
			</list>
		</property>
	</bean>
	
	<bean id="diningInterceptor" class="org.ehais.interceptor.DiningInterceptor">
		<property name="loginUrl" value="/dining/login"/>
		<property name="ignoreUrls">
			<list>
				<value>/dining/AuthImage</value>
				<value>/dining/login_submit</value>
			</list>
		</property>
	</bean>
	
	<bean id="ehaisManageInterceptor" class="org.ehais.interceptor.EhaisManageInterceptor">
		<property name="loginUrl" value="/ehais/adminlogin"/>
		<property name="ignoreUrls">
			<list>
				<value>/ehais/AuthImage</value>
				<value>/ehais/admin_login_submit</value>
			</list>
		</property>
	</bean>
	
	<bean id="ehaisAgencyInterceptor" class="org.ehais.interceptor.EhaisAgencyInterceptor">
		<property name="loginUrl" value="/ehais/login"/>
		<property name="ignoreUrls">
			<list>
				<value>/ehais/AuthImage</value>
				<value>/ehais/agency_login_submit</value>
			</list>
		</property>
	</bean>
	



<bean id="stringHttpMessageConverter"
	class="org.springframework.http.converter.StringHttpMessageConverter">
    <property name="supportedMediaTypes">
        <list>
            <value>text/plain;charset=UTF-8</value>
            <value>application/json;charset=UTF-8</value>
        </list>
    </property>
</bean>
<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
<!-- Jackson 是Spring 自带的功能 -->
<bean id="mappingJackson2HttpMessageConverter"
    class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
    <property name="supportedMediaTypes">
        <list>
            <value>application/json;charset=UTF-8</value>
            <value>application/xml;charset=UTF-8</value>
            <value>text/html;charset=UTF-8</value>
            <value>text/plain;charset=UTF-8</value>
            <value>text/xml;charset=UTF-8</value>
            <value>text/javascript;charset=UTF-8</value>
        </list>
    </property>
</bean>
<mvc:annotation-driven>
    <mvc:message-converters>
        <ref bean="stringHttpMessageConverter" />
        <ref bean="mappingJackson2HttpMessageConverter" />
    </mvc:message-converters>
</mvc:annotation-driven>

	 
</beans>