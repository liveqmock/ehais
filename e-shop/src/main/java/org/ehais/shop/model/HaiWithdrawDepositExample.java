package org.ehais.shop.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import org.ehais.tools.CriteriaObject;

public class HaiWithdrawDepositExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table hai_withdraw_deposit
     *
     * @mbg.generated Mon Apr 09 23:11:04 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table hai_withdraw_deposit
     *
     * @mbg.generated Mon Apr 09 23:11:04 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table hai_withdraw_deposit
     *
     * @mbg.generated Mon Apr 09 23:11:04 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table hai_withdraw_deposit
     *
     * @mbg.generated Mon Apr 09 23:11:04 CST 2018
     */
    protected int limitStart = -1;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table hai_withdraw_deposit
     *
     * @mbg.generated Mon Apr 09 23:11:04 CST 2018
     */
    protected int limitEnd = -1;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hai_withdraw_deposit
     *
     * @mbg.generated Mon Apr 09 23:11:04 CST 2018
     */
    public HaiWithdrawDepositExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hai_withdraw_deposit
     *
     * @mbg.generated Mon Apr 09 23:11:04 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hai_withdraw_deposit
     *
     * @mbg.generated Mon Apr 09 23:11:04 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hai_withdraw_deposit
     *
     * @mbg.generated Mon Apr 09 23:11:04 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hai_withdraw_deposit
     *
     * @mbg.generated Mon Apr 09 23:11:04 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hai_withdraw_deposit
     *
     * @mbg.generated Mon Apr 09 23:11:04 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hai_withdraw_deposit
     *
     * @mbg.generated Mon Apr 09 23:11:04 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hai_withdraw_deposit
     *
     * @mbg.generated Mon Apr 09 23:11:04 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hai_withdraw_deposit
     *
     * @mbg.generated Mon Apr 09 23:11:04 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hai_withdraw_deposit
     *
     * @mbg.generated Mon Apr 09 23:11:04 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hai_withdraw_deposit
     *
     * @mbg.generated Mon Apr 09 23:11:04 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hai_withdraw_deposit
     *
     * @mbg.generated Mon Apr 09 23:11:04 CST 2018
     */
    public void CriteriaStoreId(Criteria c, CriteriaObject co) {
        if(co == null || co.getOperator() == null)return ;
        if(co.getOperator().equals("eq")){
            c.andStoreIdEqualTo(co.getStoreId());
        }else if(co.getOperator().equals("in")){
            c.andStoreIdIn(co.getStoreList());
        }else if(co.getOperator().equals("user_eq")){
            c.andUserIdEqualTo(co.getUserId());
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hai_withdraw_deposit
     *
     * @mbg.generated Mon Apr 09 23:11:04 CST 2018
     */
    public void setLimitStart(int limitStart) {
        this.limitStart=limitStart;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hai_withdraw_deposit
     *
     * @mbg.generated Mon Apr 09 23:11:04 CST 2018
     */
    public int getLimitStart() {
        return limitStart;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hai_withdraw_deposit
     *
     * @mbg.generated Mon Apr 09 23:11:04 CST 2018
     */
    public void setLimitEnd(int limitEnd) {
        this.limitEnd=limitEnd;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hai_withdraw_deposit
     *
     * @mbg.generated Mon Apr 09 23:11:04 CST 2018
     */
    public int getLimitEnd() {
        return limitEnd;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table hai_withdraw_deposit
     *
     * @mbg.generated Mon Apr 09 23:11:04 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andWdIdIsNull() {
            addCriterion("wd_id is null");
            return (Criteria) this;
        }

        public Criteria andWdIdIsNotNull() {
            addCriterion("wd_id is not null");
            return (Criteria) this;
        }

        public Criteria andWdIdEqualTo(Integer value) {
            addCriterion("wd_id =", value, "wdId");
            return (Criteria) this;
        }

        public Criteria andWdIdNotEqualTo(Integer value) {
            addCriterion("wd_id <>", value, "wdId");
            return (Criteria) this;
        }

        public Criteria andWdIdGreaterThan(Integer value) {
            addCriterion("wd_id >", value, "wdId");
            return (Criteria) this;
        }

        public Criteria andWdIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("wd_id >=", value, "wdId");
            return (Criteria) this;
        }

        public Criteria andWdIdLessThan(Integer value) {
            addCriterion("wd_id <", value, "wdId");
            return (Criteria) this;
        }

        public Criteria andWdIdLessThanOrEqualTo(Integer value) {
            addCriterion("wd_id <=", value, "wdId");
            return (Criteria) this;
        }

        public Criteria andWdIdIn(List<Integer> values) {
            addCriterion("wd_id in", values, "wdId");
            return (Criteria) this;
        }

        public Criteria andWdIdNotIn(List<Integer> values) {
            addCriterion("wd_id not in", values, "wdId");
            return (Criteria) this;
        }

        public Criteria andWdIdBetween(Integer value1, Integer value2) {
            addCriterion("wd_id between", value1, value2, "wdId");
            return (Criteria) this;
        }

        public Criteria andWdIdNotBetween(Integer value1, Integer value2) {
            addCriterion("wd_id not between", value1, value2, "wdId");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Long value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Long value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Long value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Long value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Long value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Long value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Long> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Long> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Long value1, Long value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Long value1, Long value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andStoreIdIsNull() {
            addCriterion("store_id is null");
            return (Criteria) this;
        }

        public Criteria andStoreIdIsNotNull() {
            addCriterion("store_id is not null");
            return (Criteria) this;
        }

        public Criteria andStoreIdEqualTo(Integer value) {
            addCriterion("store_id =", value, "storeId");
            return (Criteria) this;
        }

        public Criteria andStoreIdNotEqualTo(Integer value) {
            addCriterion("store_id <>", value, "storeId");
            return (Criteria) this;
        }

        public Criteria andStoreIdGreaterThan(Integer value) {
            addCriterion("store_id >", value, "storeId");
            return (Criteria) this;
        }

        public Criteria andStoreIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("store_id >=", value, "storeId");
            return (Criteria) this;
        }

        public Criteria andStoreIdLessThan(Integer value) {
            addCriterion("store_id <", value, "storeId");
            return (Criteria) this;
        }

        public Criteria andStoreIdLessThanOrEqualTo(Integer value) {
            addCriterion("store_id <=", value, "storeId");
            return (Criteria) this;
        }

        public Criteria andStoreIdIn(List<Integer> values) {
            addCriterion("store_id in", values, "storeId");
            return (Criteria) this;
        }

        public Criteria andStoreIdNotIn(List<Integer> values) {
            addCriterion("store_id not in", values, "storeId");
            return (Criteria) this;
        }

        public Criteria andStoreIdBetween(Integer value1, Integer value2) {
            addCriterion("store_id between", value1, value2, "storeId");
            return (Criteria) this;
        }

        public Criteria andStoreIdNotBetween(Integer value1, Integer value2) {
            addCriterion("store_id not between", value1, value2, "storeId");
            return (Criteria) this;
        }

        public Criteria andCreateDateIsNull() {
            addCriterion("create_date is null");
            return (Criteria) this;
        }

        public Criteria andCreateDateIsNotNull() {
            addCriterion("create_date is not null");
            return (Criteria) this;
        }

        public Criteria andCreateDateEqualTo(Date value) {
            addCriterion("create_date =", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateNotEqualTo(Date value) {
            addCriterion("create_date <>", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateGreaterThan(Date value) {
            addCriterion("create_date >", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateGreaterThanOrEqualTo(Date value) {
            addCriterion("create_date >=", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateLessThan(Date value) {
            addCriterion("create_date <", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateLessThanOrEqualTo(Date value) {
            addCriterion("create_date <=", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateIn(List<Date> values) {
            addCriterion("create_date in", values, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateNotIn(List<Date> values) {
            addCriterion("create_date not in", values, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateBetween(Date value1, Date value2) {
            addCriterion("create_date between", value1, value2, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateNotBetween(Date value1, Date value2) {
            addCriterion("create_date not between", value1, value2, "createDate");
            return (Criteria) this;
        }

        public Criteria andWithdrawDepositIsNull() {
            addCriterion("withdraw_deposit is null");
            return (Criteria) this;
        }

        public Criteria andWithdrawDepositIsNotNull() {
            addCriterion("withdraw_deposit is not null");
            return (Criteria) this;
        }

        public Criteria andWithdrawDepositEqualTo(Integer value) {
            addCriterion("withdraw_deposit =", value, "withdrawDeposit");
            return (Criteria) this;
        }

        public Criteria andWithdrawDepositNotEqualTo(Integer value) {
            addCriterion("withdraw_deposit <>", value, "withdrawDeposit");
            return (Criteria) this;
        }

        public Criteria andWithdrawDepositGreaterThan(Integer value) {
            addCriterion("withdraw_deposit >", value, "withdrawDeposit");
            return (Criteria) this;
        }

        public Criteria andWithdrawDepositGreaterThanOrEqualTo(Integer value) {
            addCriterion("withdraw_deposit >=", value, "withdrawDeposit");
            return (Criteria) this;
        }

        public Criteria andWithdrawDepositLessThan(Integer value) {
            addCriterion("withdraw_deposit <", value, "withdrawDeposit");
            return (Criteria) this;
        }

        public Criteria andWithdrawDepositLessThanOrEqualTo(Integer value) {
            addCriterion("withdraw_deposit <=", value, "withdrawDeposit");
            return (Criteria) this;
        }

        public Criteria andWithdrawDepositIn(List<Integer> values) {
            addCriterion("withdraw_deposit in", values, "withdrawDeposit");
            return (Criteria) this;
        }

        public Criteria andWithdrawDepositNotIn(List<Integer> values) {
            addCriterion("withdraw_deposit not in", values, "withdrawDeposit");
            return (Criteria) this;
        }

        public Criteria andWithdrawDepositBetween(Integer value1, Integer value2) {
            addCriterion("withdraw_deposit between", value1, value2, "withdrawDeposit");
            return (Criteria) this;
        }

        public Criteria andWithdrawDepositNotBetween(Integer value1, Integer value2) {
            addCriterion("withdraw_deposit not between", value1, value2, "withdrawDeposit");
            return (Criteria) this;
        }

        public Criteria andIsSuccessIsNull() {
            addCriterion("is_success is null");
            return (Criteria) this;
        }

        public Criteria andIsSuccessIsNotNull() {
            addCriterion("is_success is not null");
            return (Criteria) this;
        }

        public Criteria andIsSuccessEqualTo(Boolean value) {
            addCriterion("is_success =", value, "isSuccess");
            return (Criteria) this;
        }

        public Criteria andIsSuccessNotEqualTo(Boolean value) {
            addCriterion("is_success <>", value, "isSuccess");
            return (Criteria) this;
        }

        public Criteria andIsSuccessGreaterThan(Boolean value) {
            addCriterion("is_success >", value, "isSuccess");
            return (Criteria) this;
        }

        public Criteria andIsSuccessGreaterThanOrEqualTo(Boolean value) {
            addCriterion("is_success >=", value, "isSuccess");
            return (Criteria) this;
        }

        public Criteria andIsSuccessLessThan(Boolean value) {
            addCriterion("is_success <", value, "isSuccess");
            return (Criteria) this;
        }

        public Criteria andIsSuccessLessThanOrEqualTo(Boolean value) {
            addCriterion("is_success <=", value, "isSuccess");
            return (Criteria) this;
        }

        public Criteria andIsSuccessIn(List<Boolean> values) {
            addCriterion("is_success in", values, "isSuccess");
            return (Criteria) this;
        }

        public Criteria andIsSuccessNotIn(List<Boolean> values) {
            addCriterion("is_success not in", values, "isSuccess");
            return (Criteria) this;
        }

        public Criteria andIsSuccessBetween(Boolean value1, Boolean value2) {
            addCriterion("is_success between", value1, value2, "isSuccess");
            return (Criteria) this;
        }

        public Criteria andIsSuccessNotBetween(Boolean value1, Boolean value2) {
            addCriterion("is_success not between", value1, value2, "isSuccess");
            return (Criteria) this;
        }

        public Criteria andSuccessDateIsNull() {
            addCriterion("success_date is null");
            return (Criteria) this;
        }

        public Criteria andSuccessDateIsNotNull() {
            addCriterion("success_date is not null");
            return (Criteria) this;
        }

        public Criteria andSuccessDateEqualTo(Date value) {
            addCriterion("success_date =", value, "successDate");
            return (Criteria) this;
        }

        public Criteria andSuccessDateNotEqualTo(Date value) {
            addCriterion("success_date <>", value, "successDate");
            return (Criteria) this;
        }

        public Criteria andSuccessDateGreaterThan(Date value) {
            addCriterion("success_date >", value, "successDate");
            return (Criteria) this;
        }

        public Criteria andSuccessDateGreaterThanOrEqualTo(Date value) {
            addCriterion("success_date >=", value, "successDate");
            return (Criteria) this;
        }

        public Criteria andSuccessDateLessThan(Date value) {
            addCriterion("success_date <", value, "successDate");
            return (Criteria) this;
        }

        public Criteria andSuccessDateLessThanOrEqualTo(Date value) {
            addCriterion("success_date <=", value, "successDate");
            return (Criteria) this;
        }

        public Criteria andSuccessDateIn(List<Date> values) {
            addCriterion("success_date in", values, "successDate");
            return (Criteria) this;
        }

        public Criteria andSuccessDateNotIn(List<Date> values) {
            addCriterion("success_date not in", values, "successDate");
            return (Criteria) this;
        }

        public Criteria andSuccessDateBetween(Date value1, Date value2) {
            addCriterion("success_date between", value1, value2, "successDate");
            return (Criteria) this;
        }

        public Criteria andSuccessDateNotBetween(Date value1, Date value2) {
            addCriterion("success_date not between", value1, value2, "successDate");
            return (Criteria) this;
        }

        public Criteria andReturnMessageIsNull() {
            addCriterion("return_message is null");
            return (Criteria) this;
        }

        public Criteria andReturnMessageIsNotNull() {
            addCriterion("return_message is not null");
            return (Criteria) this;
        }

        public Criteria andReturnMessageEqualTo(String value) {
            addCriterion("return_message =", value, "returnMessage");
            return (Criteria) this;
        }

        public Criteria andReturnMessageNotEqualTo(String value) {
            addCriterion("return_message <>", value, "returnMessage");
            return (Criteria) this;
        }

        public Criteria andReturnMessageGreaterThan(String value) {
            addCriterion("return_message >", value, "returnMessage");
            return (Criteria) this;
        }

        public Criteria andReturnMessageGreaterThanOrEqualTo(String value) {
            addCriterion("return_message >=", value, "returnMessage");
            return (Criteria) this;
        }

        public Criteria andReturnMessageLessThan(String value) {
            addCriterion("return_message <", value, "returnMessage");
            return (Criteria) this;
        }

        public Criteria andReturnMessageLessThanOrEqualTo(String value) {
            addCriterion("return_message <=", value, "returnMessage");
            return (Criteria) this;
        }

        public Criteria andReturnMessageLike(String value) {
            addCriterion("return_message like", value, "returnMessage");
            return (Criteria) this;
        }

        public Criteria andReturnMessageNotLike(String value) {
            addCriterion("return_message not like", value, "returnMessage");
            return (Criteria) this;
        }

        public Criteria andReturnMessageIn(List<String> values) {
            addCriterion("return_message in", values, "returnMessage");
            return (Criteria) this;
        }

        public Criteria andReturnMessageNotIn(List<String> values) {
            addCriterion("return_message not in", values, "returnMessage");
            return (Criteria) this;
        }

        public Criteria andReturnMessageBetween(String value1, String value2) {
            addCriterion("return_message between", value1, value2, "returnMessage");
            return (Criteria) this;
        }

        public Criteria andReturnMessageNotBetween(String value1, String value2) {
            addCriterion("return_message not between", value1, value2, "returnMessage");
            return (Criteria) this;
        }

        public Criteria andReturnMessageLikeInsensitive(String value) {
            addCriterion("upper(return_message) like", value.toUpperCase(), "returnMessage");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table hai_withdraw_deposit
     *
     * @mbg.generated do_not_delete_during_merge Mon Apr 09 23:11:04 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table hai_withdraw_deposit
     *
     * @mbg.generated Mon Apr 09 23:11:04 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}